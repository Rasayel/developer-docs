import queryGraphQLSchema from '../schema/query.js';
import { writeFileSync } from 'fs';
import { convert } from '../schema/convert.js';

async function fetchSchema(options) {
    const schema = await queryGraphQLSchema(options.url, {
        query: options.query,
        method: options.method,
        headers: options.headers,
    });
    const format = options.format ?? 'introspection';
    const extension = format === 'sdl' ? 'graphqls' : 'json';
    const output = options.target || `src/_schema.${extension}`;
    writeFileSync(output, convert(schema, format), {
        encoding: 'utf-8',
        flag: 'w',
    });
}
function fetchGraphQLSchema(options) {
    return {
        name: 'fetch-graphql-schema',
        buildStart: async function () {
            await fetchSchema(options);
        },
    };
}

export { fetchGraphQLSchema as default, fetchSchema };
//# sourceMappingURL=fetch.js.map
