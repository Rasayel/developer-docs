import path from 'path';
import { loadTemplateConfig } from '../../template/config.js';

function templateConfigurationFile(templateDirectory) {
    return path.join(templateDirectory, 'magidoc.config.js');
}
function resolveTemplateConfigurationTask() {
    return {
        title: `Resolving template configuration`,
        executor: async (ctx, task) => {
            const configPath = templateConfigurationFile(ctx.tmpDirectory.path);
            const config = await loadTemplateConfig(configPath);
            let output = `Found ${config.SUPPORTED_OPTIONS.length} supported keys\n`;
            output += `Target schema location: ${config.SCHEMA_TARGET_LOCATION}`;
            task.output(output);
            ctx.templateConfiguration = {
                supportedOptions: config.SUPPORTED_OPTIONS,
                schemaTargetLocation: path.join(ctx.tmpDirectory.path, config.SCHEMA_TARGET_LOCATION),
                staticAssetsLocation: path.join(ctx.tmpDirectory.path, config.STATIC_ASSETS_LOCATION),
                envFileLocation: path.join(ctx.tmpDirectory.path, config.ENV_FILE_LOCATION),
            };
        },
    };
}

export { resolveTemplateConfigurationTask, templateConfigurationFile };
//# sourceMappingURL=resolveTemplateConfig.js.map
