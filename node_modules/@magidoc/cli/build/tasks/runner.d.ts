export type Task<T> = {
    title: string;
    enabled?: boolean;
    executor: TaskExecutor<T>;
};
export type TaskWrapper = {
    skip: (message: string) => void;
    output: (message: string) => void;
};
export type TaskExecutor<T> = (ctx: T, task: TaskWrapper) => Promise<void> | void;
export type TasksConfig<T> = {
    ctx: T | undefined;
    silent: boolean;
};
export declare function executeAllTasks<T>(tasks: Task<T>[], config?: TasksConfig<T>): Promise<T>;
